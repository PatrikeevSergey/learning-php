<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" href="../../css/style.css">
	<title>Сигнатура функций</title>
</head>
<body>
<div class="container">
	<div class="row">
		<h1>
			Сигнатура функций
		</h1>		
	</div>	
	<div>
		<p>
			Функция <span class="spanWarning">abs()</span> возвращает абсолютное число и принимает параметр: <b>число</b>. Если ее вызвать без параметра, PHP выдаст ошибку:
			<span><i><b>Fatal error</b>: Uncaught ArgumentCountError: abs() expects exactly 1 argument, 0 given </i></span> <br>
			Так интерпретатор сообщает, что функция ожидает один параметров, а был произведен вызов ее без параметров. <br>
			Параметром для <span class="spanWarning">abs()</span> могут быть только числа. Если попробовать передать строку, то это приведет к ошибке: 
			<span><i>TypeError: abs() Argument #1 ($num) must be of type int|float, string given</i></span><br>
			Результат выполнения функции - тоже число. Другая функция может иметь иное число параметров и другие типы параметров. Например, может существовать функция, которая принимает число, строку и еще одно число. <br>
			Для того, чтобы узнать сколько и какие параметры нужно функции <span class="spanWarning">abs() </span> и какого типа будет значение, которое вернет функция, необходимо заглянуть в <b>сигнатуру</b> этой функции. Сигнатура определяет входные параметры и их типы, а также выходной параметр и его тип. О функции <span class="spanWarning">abs()</span> можно прочесть в <a href = "https://www.php.net/manual/ru/function.abs.php/"> официальной документации </a>. В разделе "Описание".  
	<div>
		<span>abs(int|float $num): int|float</span><br>
		<span>Возвращает абсолютное значение num</span><br>
	</div>
		</p>
		<p>
			Эта структура функции и краткое описание на русском языке. Информацию можно расшифровать так: 
			<ul>
				<li>
					Функция называется <span class="spanWarning">abs</span>;
				</li>
				<li>
					Функция принимает параметр: число(num);
				</li>
				<li>
					Функция возвращает число;
				</li>
				<li>
					Функция возвращает абсолютное значение num;
				</li>
			</ul>
		</p>
		<p>
			Если параметров больше одного, то передавать из можно только в той последовательности, в какой они определены в сигнатуре. Любая функция возвращает всегда одно значение. Это ограничение существует на уровне языка и не может быть нарушено.
		</p>
	</div>
	<div>
		<h1>
			Агрументы по умолчанию
		</h1>
		<p>
			Рассмотрим функцию <span class="spanWarning">round()</span>. Она округляет переданное ей число. 
			<div>
				<span>&lt;?php</span><br>
				<span>$result = round(45.678, 0); </span><br>
				<span>print_r($result); // => 45</span><br>
			</div>
		</p>
		<p>
			В качестве аргументов в функцию было передано два параметра: число и точность округления <span class="spanWarning">0</span>, что означает что огругление будет до целого значения. <br>
			Чаще всего нужно огруглять до целого, а не до десятых, например. Поэтому авторы функции сделали второй параметр <b>необязательным</b> и задали ему внутри функции <b>значение по умолчанию</b> <span class="spanWarning">0</span>. Следовательно, второй параметр можно не указывать.
			<div>
				<span>&lt;?php</span><br>
				<span>$result = round(45.678); </span><br>
				<span>print_r($result); // => 45</span><br>
			</div>
		</p>
		<p>
			Но если нужна другая точность, можно в функцию передать параметр: 
			<div>
				<span>&lt;?php</span><br>
				<span>$result = round(45.678, 1); </span><br>
				<span>print_r($result); // => 45.7</span><br>
			</div>
		</p>
		<p>
			Если функция в PHP принимает необязательный аргумент, то он всегда стоят после обязательных. Их количество может быть любым, зависит от функции, но они всегда идет рядом или в конце списка аргументов.
		</p>
	</div>
</div>
</body>
</html>