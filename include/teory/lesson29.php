<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" href="../../css/style.css">
	<title>Использование циклов</title>
</head>
<body>
<div class="container">
	<div class="row">
		<h1>Использование циклов</h1>
		<p>
			Отдельный класс задач, который не может обойтись без циклов, называется агрегированием данных. К таким задачам относятся поиск максимального, синимального, сумму, среднего арифметического и тд. Их главная особенность в том, что результат зависит от всего набора данных. Для рассчета сумму нужно сложить <b>все</b> числа, для вычисления максимального нужно сравнить <b>все</b> числа. <br>
			С такими задачами хорошо знакомы все, кто занимается числами, например бухгалтеры или маркетологи. Обычно их выполняют в таблице подобно MS Excel. <br>
			Разберем самый простой пример - поиск сумму набора чисел. Реализуем функцию, которая складывает числа в указанном диапазоне, включая границы. Диапазон в данном случае называется ряд числе от какого-то начала до определенного конца. Например, диапозон [1, 10] включает в себя целый числа от 1 до 10.
		</p>
		<div>
			<span>&lt;?php</span><br>
			<span>&nbsp;&nbsp;sumNumbersForRange(4, 7); //4 + 5 + 6 + 7 = 22</span><br>
			<span>&nbsp;&nbsp;sumNumbersForRange(1, 2); //1 + 2 = 3 </span><br>
			<span>&nbsp;&nbsp;// [1,1] диапазон с одинаковым началос и концом - тоже диапазон </span><br>
			<span>&nbsp;&nbsp;// он в себя включается овно одно число - саму границу диапазона</span><br>
			<span>&nbsp;&nbsp;sumNumbersForRange(1, 1); // 1</span><br>
			<span>&nbsp;&nbsp;sumNumbersForRange(100, 100); //100 </span><br>
		</div>
		<p>
			Для реализации такого кода необходимо использовать цикл, т.к. сложение чисел - итеративный процесс (он повторяется для каждого числа), а количество идетаций зависит от размера диапазона. Перед тем, как смотреть код, ответься на вопросы ниже:
			<ul>
				<li>
					Каким значением инициализируется счетчик?
				</li>
				<li>
					Как он будет изменяться?
				</li>
				<li>
					Когда цикл должен остановиться?
				</li>
			</ul>
		</p>
		<div>
			<span>&lt;?php</span><br>
			<span>&nbsp;&nbsp;function sumNumbersForRange($start, $finish) {</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;// Технически можно менять $start</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;// Но выходные аргументы нужно оставлять в исходном значении</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;// это сделает код проще для анализа</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp; $i = $start;</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;$sum = 0; //Инициализация суммы</span><br><br><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;while ($i <= $finish) { Двигаемся до конца диапазона//</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$sum = $sum + $i;</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$i += 1;</span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;}</span><br><br><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;// Возвращаем полученный результат </span><br>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;return $sum;</span><br>
			<span>&nbsp;&nbsp;}</span><br>
		</div>
		<p>
			Общая структура цикла здесь стандартна. Если счетчик, который инициализируется начальным значением диапазона, есть сам цикл с условием остановки при движении конца диапазона, и, наконец, изменение счетчика в конце теле цикла. Количество итераций в таком цикле равно <span class="spanWarning">$finish - $start - 1</span>. То есть для диапазона от 5 до 7 - это 7 - 5 + 1, то есть 3 итерации. <br>
			Главные отличия от обычной обработки связаны с логикой вычислений результата. В задачах на агрегацию всегда есть какая-то переменная, которая хранит врутри себя результат работы цикла. В конце выше это <span class="spanWarning">$sum</span>. На каждой итерации цикла происходит ее изменение, прибавление следующего числа в диапазоне <span class="spanWarning">$sum = $sum + $i</span>. Весь процесс выклюдет так:
		<div>
			<span>&lt;?php</span><br>
			<span>$sum = 0;</span><br>
			<span>$sum = $sum + 2; // 2</span><br>
			<span>$sum = $sum + 3; // 5</span><br>
			<span>$sum = $sum + 4; // 9</span><br>
			<span>$sum = $sum + 5;// 14</span><br>
			<span>// 14 - результат сложения числе в диапазоне [2 ,5]</span><br>
		</div>
		</p>
		<p>
			У переменной <span class="spanWarning">$sum</span> есть начальное значение, равное 0. Зачем вообще добавлять это значение? Любая повторяющаяся операция начинается с какого-то знчение. Нельзя просто так объявить переменную и начать с ней работать внутри цикла. Это может привести к ошибкам:
		</p>
		<div>
			<span>&lt;?php </span><br>
			<span>// начальное значение не задано</span><br>
			<span>// PHP автоматически делает его равным NULL</span><br>
			<span>$sum;</span><br><br><br>
			<span>//Первая итерация цикла</span><br>
			<span>$sum = $sum + 2; //?</span><br>
		</div>
	</div>	
</div>
</body>
</html>