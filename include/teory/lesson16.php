<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" href="../../css/style.css">
	<title>Детерминированность и побочные эффекты</title>
</head>
<body>
<div class="container">
	<div class="row">
		<div>
			<h1>
				Детерминированность и побочные эффекты
			</h1>
			<p>
				Независимо от того, какой язык программирования, функции внутри него обладают некоторыми фундоментальными свойствами. Зная эти свойства, легче прогнозировать поведение функции. Следовательно легче тестировать. К таким свойствам относится детерминированность. Функция называется детерминированной тогда, когда для одних и тех же вводимых аргументов она возвращает один и тот же результат. Например функция переворачивания строки <span class="spanWarning">strrev()</span>.
		<div>
			<span>&lt;?php</span><br>
			<span>strrev('doc'); // cod</span><br>
			<span>strrev('doc'); // cod</span>
		</div>
			</p>
			<p>
				Сколько бы раз не вызывали эту функцию, передавая параметр 'doc', результат, который вернет функция будет 'cod'. В свою очередь, функция, например, возвращающая случайное число, не является детерминированной. Так как у нее нет одного и того же входа (даже если он пустой), результат, который вернет функция, будет разный. 
			</p>
			<span>&lt;?php</span><br>
			<span>rand(); // 1962981652</span><br>
			<span>rand();// 1521225379</span>
		</div>
		<p>
			Для чего нужно это знать? Детерминированность серьезно влияет на многие аспекты. Они удобны в работе, их легко оптимизировать, легко тестировать. Если есть возможность сделать функцию детерминированной, не раздумывая делайте ее такой.
		</p>		
	</div>
	<div>
		<h1>
			Побочные эффекты
		</h1>
		<p>
			<span class="spanWarning">print_r()</span> - это тоже функция. Она принимает на вход данные любого типа и выводит их на экран. <br>
			<b>Что возвращает функция <span class="spanWarning">print_r</span>?</b> Ответ - что бы она не возвращала это значение никак не используется. <span class="spanWarning">print_r()</span> выводит на экран, но это не возврат значения, это просто какое-то действие, которое выполняет функция. Вывод на экран и возврат значения из функции - разные и независимые операции.  Технически вывод на экран равносилен записи в файо (немного особый, но все-таки файл). Для понимания этой темы необходимо немного разбираться с устройстве операционных систем, это важно для программиста.<br>
			С точки зрения программы вывод на экран - это <b>побочный эффект</b>. Побочным эффектом называют операции, при которых просиходит взаимодействие с внешним окружением (средой выполнения). К таким операциям относятся любые сетевые взаимодействия, взаимодействие с файловой системой (чтения и запись), вывод информации на экран, печать на принтере и т.д.<br>
			Побочные эффекты - важных источник проблем и ошибок в программных системах. Код с пободными эффектами сложен в тестировании и ненадежен. При этом без побочных эффектов программирование не имеет смысла. Без них не было бы результата работы программы, запись в бд, вывести на экран или отправить что-то по сети. Понимание принципов побочных эффектов очень сильно влияет на стиль программировани и способность строить качественные программы. Эта тема полностью раскроется в курсе о функциях. <br>
			Когда функция детерминирования и не имеет побочных эффектов, ее называюь "<b>чистой</b>" функцией. Чистые функции:
			<ul>
				<li>проще читать;</li>
				<li>проще отлаживать;</li>
				<li>проще тестировать;</li>
				<li>не зависят от порядка, в котором вызываются;</li>
				<li>просто запустить параллельно.</li>
			</ul>
		</p>
		<p>
			Чистые функции независимы от времени. Недатирминизм и побочные эффекты добавляют понятия времени. Если фукнция зависит от чего-то, что может случиться, а может не случиться и меняет что-то за пределами своих границ, то она неожиданно становится зависимой от времени.
		</p>
	</div>
	</div>
</div>
<a href="./lesson17.php">Далее</a>
</body>
</html>
